import React from 'react';
import { RFValue } from 'react-native-responsive-fontsize';
import { SvgXml } from 'react-native-svg';
import { BlackColor, PrimaryColor } from '../styles/color';

let width: String = String(RFValue(25));
let height: String = String(RFValue(25));
let fill: String = BlackColor;
let stroke: String = BlackColor;

export function HomeIconInactive(props) {
  let width: String = String(RFValue(28.24));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }  viewBox='0 0 29 24'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    fill-rule='evenodd'
    clip-rule='evenodd'
  d='M12.2941 24V15.5294H16.9412V24H24V12.7059H28.2353L14.1176 0L0 12.7059H4.23529V24H11.2941Z'
    stroke='#9B9B9B'

  />
</svg>
`;
  return <SvgXml xml={xml} />;
}

export function HomeIconActive(props) {
  let width: String = String(RFValue(28.24));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }   viewBox='0 0 29 24'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    fill-rule='evenodd'
    clip-rule='evenodd'
    d='M12.2941 24V15.5294H16.9412V24H24V12.7059H28.2353L14.1176 0L0 12.7059H4.23529V24H11.2941Z'
    fill='#DB3022'
  /></svg>`;
  return <SvgXml xml={xml} />;
}
//
//
export function ShopIconInactive(props) {
  let width: String = String(RFValue(24));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }   viewBox='0 0 26 26'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    d='M1 3.4H0.5V3.9H1V3.4ZM3.4 3.4L3.85176 3.18573L3.71624 2.9H3.4V3.4ZM7.72 12.508L8.15792 12.7493L8.28148 12.5251L8.17176 12.2937L7.72 12.508ZM6.1 15.448L6.53417 15.6961L6.53792 15.6893L6.1 15.448ZM22.6 19V19.5H23.1V19H22.6ZM22.6 16.6H23.1V16.1H22.6V16.6ZM8.404 16.3L7.91893 16.1787L7.904 16.2384V16.3H8.404ZM8.44 16.156L8.00229 15.9143L7.97075 15.9714L7.95493 16.0347L8.44 16.156ZM9.52 14.2V13.7H9.22492L9.08229 13.9583L9.52 14.2ZM20.56 12.964L20.1222 12.7225L20.1216 12.7236L20.56 12.964ZM24.856 5.176L25.2938 5.41751L25.2958 5.41379L24.856 5.176ZM23.8 3.4L23.8012 2.9H23.8V3.4ZM6.052 3.4L5.59949 3.61268L5.73453 3.9H6.052V3.4ZM4.924 1L5.37651 0.787319L5.24147 0.5H4.924V1ZM8.20001 19.7C6.60061 19.7 5.31201 21.0071 5.31201 22.6H6.31201C6.31201 21.5529 7.15941 20.7 8.20001 20.7V19.7ZM5.31201 22.6C5.31201 24.1929 6.60061 25.5 8.20001 25.5V24.5C7.15941 24.5 6.31201 23.6471 6.31201 22.6H5.31201ZM8.20001 25.5C9.79615 25.5 11.1 24.1961 11.1 22.6H10.1C10.1 23.6439 9.24387 24.5 8.20001 24.5V25.5ZM11.1 22.6C11.1 21.0039 9.79615 19.7 8.20001 19.7V20.7C9.24387 20.7 10.1 21.5561 10.1 22.6H11.1ZM0.5 1V3.4H1.5V1H0.5ZM1 3.9H3.4V2.9H1V3.9ZM2.94824 3.61427L7.26824 12.7223L8.17176 12.2937L3.85176 3.18573L2.94824 3.61427ZM7.28208 12.2667L5.66208 15.2067L6.53792 15.6893L8.15792 12.7493L7.28208 12.2667ZM5.66588 15.1999C5.43007 15.6126 5.3 16.0943 5.3 16.6H6.3C6.3 16.2657 6.38593 15.9554 6.53412 15.6961L5.66588 15.1999ZM5.3 16.6C5.3 18.1961 6.60386 19.5 8.2 19.5V18.5C7.15614 18.5 6.3 17.6439 6.3 16.6H5.3ZM8.2 19.5H22.6V18.5H8.2V19.5ZM23.1 19V16.6H22.1V19H23.1ZM22.6 16.1H8.704V17.1H22.6V16.1ZM8.704 16.1C8.81214 16.1 8.904 16.1919 8.904 16.3H7.904C7.904 16.7441 8.25986 17.1 8.704 17.1V16.1ZM8.88907 16.4213L8.92507 16.2773L7.95493 16.0347L7.91893 16.1787L8.88907 16.4213ZM8.87771 16.3977L9.95771 14.4417L9.08229 13.9583L8.00229 15.9143L8.87771 16.3977ZM9.52 14.7H18.46V13.7H9.52V14.7ZM18.46 14.7C19.5457 14.7 20.5041 14.1058 20.9984 13.2044L20.1216 12.7236C19.7999 13.3102 19.1744 13.7 18.46 13.7V14.7ZM20.9978 13.2055L25.2938 5.4175L24.4182 4.9345L20.1222 12.7225L20.9978 13.2055ZM25.2958 5.41379C25.5809 4.88649 25.5679 4.24816 25.2615 3.73293L24.402 4.244C24.5285 4.4568 24.5339 4.72043 24.4162 4.93821L25.2958 5.41379ZM25.2615 3.73293C24.9552 3.2177 24.4006 2.90138 23.8012 2.9L23.7988 3.9C24.0464 3.90057 24.2755 4.03121 24.402 4.244L25.2615 3.73293ZM23.8 2.9H6.052V3.9H23.8V2.9ZM6.50451 3.18732L5.37651 0.787319L4.47149 1.21268L5.59949 3.61268L6.50451 3.18732ZM4.924 0.5H1V1.5H4.924V0.5ZM20.2 19.7C18.6006 19.7 17.312 21.0071 17.312 22.6H18.312C18.312 21.5529 19.1594 20.7 20.2 20.7V19.7ZM17.312 22.6C17.312 24.1929 18.6006 25.5 20.2 25.5V24.5C19.1594 24.5 18.312 23.6471 18.312 22.6H17.312ZM20.2 25.5C21.7962 25.5 23.1 24.1961 23.1 22.6H22.1C22.1 23.6439 21.2439 24.5 20.2 24.5V25.5ZM23.1 22.6C23.1 21.0039 21.7962 19.7 20.2 19.7V20.7C21.2439 20.7 22.1 21.5561 22.1 22.6H23.1Z'
    fill='#9B9B9B'
  />
</svg>
`;
  return <SvgXml xml={xml} />;
}

export function ShopIconActive(props) {
  let width: String = String(RFValue(24));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }   viewBox='0 0 24 24'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    fill-rule='evenodd'
    clip-rule='evenodd'
    d='M7.20001 19.2C5.88001 19.2 4.81201 20.28 4.81201 21.6C4.81201 22.92 5.88001 24 7.20001 24C8.52001 24 9.60001 22.92 9.60001 21.6C9.60001 20.28 8.52001 19.2 7.20001 19.2ZM0 0V2.4H2.4L6.72 11.508L5.1 14.448C4.908 14.784 4.8 15.18 4.8 15.6C4.8 16.92 5.88 18 7.2 18H21.6V15.6H7.704C7.536 15.6 7.404 15.468 7.404 15.3L7.44 15.156L8.52 13.2H17.46C18.36 13.2 19.152 12.708 19.56 11.964L23.856 4.176C24.0574 3.80346 24.0482 3.35248 23.8318 2.98847C23.6153 2.62445 23.2235 2.40098 22.8 2.4H5.052L3.924 0H0ZM19.2 19.2C17.88 19.2 16.812 20.28 16.812 21.6C16.812 22.92 17.88 24 19.2 24C20.52 24 21.6 22.92 21.6 21.6C21.6 20.28 20.52 19.2 19.2 19.2Z'
    fill='#DB3022'
  /></svg>`;
  return <SvgXml xml={xml} />;
}

export function BagTabIconActive(props) {
  let width: String = String(RFValue(24));
  let height: String = String(RFValue(23));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }   viewBox='0 0 24 23'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    d='M23.953 20.4658L22 2.09091C22 0.935682 21.105 0 20 0H12H4C2.895 0 2 0.935682 2 2.09091L0.0469999 20.4658C0.0179999 20.609 0 20.7565 0 20.9091C0 22.0643 0.895 23 2 23H12H22C23.105 23 24 22.0643 24 20.9091C24 20.7565 23.982 20.609 23.953 20.4658ZM17 5.13109V6.27273C17 9.15505 14.757 11.5 12 11.5C9.243 11.5 7 9.15505 7 6.27273V5.13109C6.419 4.91573 6 4.34073 6 3.65909C6 2.79345 6.672 2.09091 7.5 2.09091C8.328 2.09091 9 2.79345 9 3.65909V6.27273C9 8.00191 10.346 9.40909 12 9.40909C13.654 9.40909 15 8.00191 15 6.27273V3.65909C15 2.79345 15.672 2.09091 16.5 2.09091C17.328 2.09091 18 2.79345 18 3.65909C18 4.34073 17.581 4.91573 17 5.13109Z'
    fill='#DB3022'
  /></svg>`;
  return <SvgXml xml={xml} />;
}

export function BagTabIconInactive(props) {
  let width: String = String(RFValue(24));
  let height: String = String(RFValue(23));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }  viewBox='0 0 24 23'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    d='M23.4558 20.5187L23.4583 20.542L23.4629 20.565C23.4867 20.6823 23.5 20.796 23.5 20.9091C23.5 21.8094 22.8081 22.5 22 22.5H12H2C1.19186 22.5 0.5 21.8094 0.5 20.9091C0.5 20.796 0.513314 20.6823 0.537055 20.565L0.541717 20.542L0.544199 20.5187L2.4972 2.14375L2.5 2.11741V2.09091C2.5 1.19065 3.19186 0.5 4 0.5H12H20C20.8081 0.5 21.5 1.19065 21.5 2.09091V2.11741L21.5028 2.14375L23.4558 20.5187ZM17.5 6.27273V5.44368C18.1009 5.08516 18.5 4.41815 18.5 3.65909C18.5 2.53849 17.6249 1.59091 16.5 1.59091C15.3751 1.59091 14.5 2.53849 14.5 3.65909V6.27273C14.5 7.74695 13.3571 8.90909 12 8.90909C10.6429 8.90909 9.5 7.74695 9.5 6.27273V3.65909C9.5 2.53849 8.62486 1.59091 7.5 1.59091C6.37514 1.59091 5.5 2.53849 5.5 3.65909C5.5 4.41815 5.89908 5.08516 6.5 5.44368V6.27273C6.5 9.41001 8.94614 12 12 12C15.0539 12 17.5 9.41001 17.5 6.27273Z'
    stroke='#9B9B9B'
  /></svg>`;
  return <SvgXml xml={xml} />;
}

export function BagTabIconInactive2(props) {
  let width: String = String(RFValue(24));
  let height: String = String(RFValue(23));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }   viewBox='0 0 25 24'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    d='M23.4561 21.6312L23.4588 21.6556L23.4638 21.6795C23.4871 21.7895 23.5 21.8953 23.5 22C23.5 22.8289 22.8289 23.5 22 23.5H12H2C1.17114 23.5 0.5 22.8289 0.5 22C0.5 21.8953 0.512876 21.7895 0.536161 21.6795L0.541235 21.6556L0.543941 21.6312L2.49694 4.05522L2.5 4.02769V4C2.5 3.17114 3.17114 2.5 4 2.5H12H20C20.8289 2.5 21.5 3.17114 21.5 4V4.02769L21.5031 4.05522L23.4561 21.6312ZM17.5 8V7.22561C18.0947 6.88209 18.5 6.24198 18.5 5.5C18.5 4.39586 17.6041 3.5 16.5 3.5C15.3959 3.5 14.5 4.39586 14.5 5.5V8C14.5 9.37786 13.3779 10.5 12 10.5C10.6221 10.5 9.5 9.37786 9.5 8V5.5C9.5 4.39586 8.60414 3.5 7.5 3.5C6.39586 3.5 5.5 4.39586 5.5 5.5C5.5 6.24198 5.90531 6.88209 6.5 7.22561V8C6.5 11.0331 8.96686 13.5 12 13.5C15.0331 13.5 17.5 11.0331 17.5 8Z'
    stroke='#9B9B9B'
  />
  <circle cx='22' cy='3' r='3' fill='#DB3022' /></svg>`;
  return <SvgXml xml={xml} />;
}

export function FavTabIconActive(props) {
  let width: String = String(RFValue(26.16));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }  viewBox='0 0 27 24'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    fill-rule='evenodd'
    clip-rule='evenodd'
    d='M13.079 24L11.1826 22.2736C4.44687 16.1657 0 12.1373 0 7.19346C0 3.16512 3.16512 0 7.19346 0C9.46921 0 11.6534 1.0594 13.079 2.73351C14.5046 1.0594 16.6888 0 18.9646 0C22.9929 0 26.158 3.16512 26.158 7.19346C26.158 12.1373 21.7112 16.1657 14.9755 22.2866L13.079 24Z'
    fill='#DB3022'
  /></svg>`;
  return <SvgXml xml={xml} />;
}

export function FavTabIconInactive(props) {
  let width: String = String(RFValue(26.16));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }  viewBox='0 0 28 26'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    fill-rule='evenodd'
    clip-rule='evenodd'
    d='M14.079 25L12.1826 23.2736C5.44687 17.1657 1 13.1373 1 8.19346C1 4.16512 4.16512 1 8.19346 1C10.4692 1 12.6534 2.0594 14.079 3.73351C15.5046 2.0594 17.6888 1 19.9646 1C23.9929 1 27.158 4.16512 27.158 8.19346C27.158 13.1373 22.7112 17.1657 15.9755 23.2866L14.079 25Z'
    stroke='#9B9B9B'
  /></svg>`;
  return <SvgXml xml={xml} />;
}

export function ProfileTabIconActive(props) {
  let width: String = String(RFValue(20.28));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  }  viewBox='0 0 21 24'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    fill-rule='evenodd'
    clip-rule='evenodd'
    d='M10.1408 0C12.9465 0 15.2113 2.26479 15.2113 5.07042C15.2113 7.87606 12.9465 10.1408 10.1408 10.1408C7.3352 10.1408 5.07041 7.87606 5.07041 5.07042C5.07041 2.26479 7.3352 0 10.1408 0ZM10.1408 24C6.06212 24 2.25463 21.9566 0 18.5577C0.0507042 15.1943 6.76056 13.3521 10.1408 13.3521C13.5042 13.3521 20.231 15.1943 20.2817 18.5577C18.0271 21.9566 14.2196 24 10.1408 24Z'
    fill='#DB3022'
  /></svg>`;
  return <SvgXml xml={xml} />;
}

export function ProfileTabIconInactive(props) {
  let width: String = String(RFValue(20.28));
  let height: String = String(RFValue(24));
  const xml = `<svg width=${props.width ?? width} height=${
    props.height ?? height
  } viewBox='0 0 22 26'
  fill='none'
  xmlns='http://www.w3.org/2000/svg'
>
  <path
    d='M11.1408 25L11.1408 24.5H11.1408L11.1408 25ZM1 19.5577L0.500057 19.5502L0.497722 19.705L0.583336 19.8341L1 19.5577ZM21.2817 19.5577L21.6984 19.8341L21.784 19.705L21.7816 19.5502L21.2817 19.5577ZM11.1408 1.5C13.6703 1.5 15.7113 3.54093 15.7113 6.07042H16.7113C16.7113 2.98865 14.2226 0.5 11.1408 0.5V1.5ZM15.7113 6.07042C15.7113 8.59991 13.6703 10.6408 11.1408 10.6408V11.6408C14.2226 11.6408 16.7113 9.1522 16.7113 6.07042H15.7113ZM11.1408 10.6408C8.61134 10.6408 6.57041 8.59991 6.57041 6.07042H5.57041C5.57041 9.1522 8.05906 11.6408 11.1408 11.6408V10.6408ZM6.57041 6.07042C6.57041 3.54093 8.61134 1.5 11.1408 1.5V0.5C8.05906 0.5 5.57041 2.98865 5.57041 6.07042H6.57041ZM11.1408 24.5C7.22971 24.5 3.57865 22.5406 1.41666 19.2813L0.583336 19.8341C2.9306 23.3727 6.89454 25.5 11.1408 25.5L11.1408 24.5ZM1.49994 19.5653C1.50991 18.904 1.84489 18.2784 2.47245 17.6902C3.10211 17.1002 3.99222 16.5826 5.01476 16.1549C7.06188 15.2987 9.51897 14.8521 11.1408 14.8521V13.8521C9.38244 13.8521 6.79445 14.3266 4.6289 15.2324C3.5451 15.6857 2.53697 16.2593 1.78865 16.9606C1.0382 17.6638 0.51544 18.5297 0.500057 19.5502L1.49994 19.5653ZM11.1408 14.8521C12.7541 14.8521 15.2113 15.2986 17.2608 16.155C18.2845 16.5827 19.1762 17.1004 19.8072 17.6906C20.4362 18.2789 20.7718 18.9045 20.7817 19.5653L21.7816 19.5502C21.7662 18.5293 21.242 17.6633 20.4903 16.9603C19.7407 16.2591 18.731 15.6855 17.6463 15.2323C15.4789 14.3267 12.891 13.8521 11.1408 13.8521V14.8521ZM20.865 19.2813C18.703 22.5406 15.052 24.5 11.1408 24.5L11.1408 25.5C15.3872 25.5 19.3511 23.3727 21.6984 19.8341L20.865 19.2813Z'
    fill='#9B9B9B'
  /></svg>`;
  return <SvgXml xml={xml} />;
}
